// JWT configuration for access and refresh tokens
// Access tokens are short-lived for security
// Refresh tokens have longer expiry for persistent sessions

const environments = {
  development: {
    access: {
      expiresIn: `${60 * 5 * 1000}`, // 5 minutes
      expiry: 60 * 5 * 1000,
      secret: process.env.JWT_ACCESS_SECRET || 'dev-access-secret'
    },
    refresh: {
      expiresIn: `${12 * 60 * 60 * 1000}`, // 12 hours
      expiry: 12 * 60 * 60 * 1000,
      secret: process.env.JWT_REFRESH_SECRET || 'dev-refresh-secret'
    },
    cookieOptions: {
      secure: false,
      sameSite: 'lax'
    }
  },
  production: {
    access: {
      expiresIn: `${60 * 3 * 1000}`, // 3 minutes
      expiry: 60 * 3 * 1000,
      secret: process.env.JWT_ACCESS_SECRET
    },
    refresh: {
      expiresIn: `${6 * 60 * 60 * 1000}`, // 6 hours
      expiry: 6 * 60 * 60 * 1000,
      secret: process.env.JWT_REFRESH_SECRET
    },
    cookieOptions: {
      secure: true,
      sameSite: 'strict'
    }
  },
  test: {
    access: {
      expiresIn: '1h',
      expiry: 60 * 60 * 1000,
      secret: 'test-access-secret'
    },
    refresh: {
      expiresIn: '24h',
      expiry: 24 * 60 * 60 * 1000,
      secret: 'test-refresh-secret'
    },
    cookieOptions: {
      secure: false,
      sameSite: 'lax'
    }
  }
};

const env = process.env.NODE_ENV || 'development';
const jwtConfig = environments[env];

module.exports = jwtConfig;
